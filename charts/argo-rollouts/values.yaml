installCRDs: true

clusterInstall: true

controller:
  name: argo-rollouts
  component: rollouts-controller
  ## Node selectors and tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  nodeSelector: {}
  tolerations: []
  affinity: {}
  image:
    repository: 331455399823.dkr.ecr.us-east-2.amazonaws.com/sfci/sfcd/argo-rollouts/sfcdk8s/argo-rollouts
    tag: latest
    pullPolicy: IfNotPresent

  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 50m
  #    memory: 64Mi

  metrics:
    serviceMonitor:
      enabled: false
      additionalLabels: {}
      additionalAnnotations: {}

serviceAccount:
  create: false
  name: argo-rollouts

## Annotations to be added to all CRDs
##
crdAnnotations: {}

## Annotations to be added to the Rollout pods
##
# podAnnotations: {}
podAnnotations:
  opencensus.k8s-integration.sfdc.com/inject: enabled
  opencensus.k8s-integration.sfdc.com/prometheus-targets: >
    [
      {
        "path": "/metrics",
        "port": "8090",
        "container_name": "argo-rollouts"
      }
    ]

## Annotations to be added to the Rollout service
##
serviceAnnotations: {}

## Labels to be added to the Rollout pods
##
podLabels: {}

# Secrets with credentials to pull images from a private registry
imagePullSecrets: []
# - name: argo-pull-secret

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 7447
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 7447
  runAsGroup: 7447
  # runAsUser: 1000
  allowPrivilegeEscalation: false

nativeIdentity: false
automountServiceAccountToken: true
